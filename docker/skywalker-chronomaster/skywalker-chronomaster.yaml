apiVersion: apps/v1
kind: Deployment 
metadata:
  name: skywalker-chronomaster
  labels:
    app: chronomaster
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chronomaster
  template:
    metadata:
      labels:
        app: chronomaster
    spec:
      volumes:
      - name: python-src-volume
        configMap:
          defaultMode: 420
          name: skywalker-codes-configmap
      - name: python-app-volume
        emptyDir: {}
      initContainers:
      - args:
        - base64 -d < /src/code > /tmp/func.decoded && unzip -o /tmp/func.decoded -d /app 
        command:
        - sh
        - -c
        image: skywalker/unzip:0.1
        name: codes-preparing
        volumeMounts:
        - mountPath: /app
          name: python-app-volume
        - mountPath: /src
          name: python-src-volume
      containers:
      - name: function
        image: skywalker/core:0.1
        env:
        - name: PYTHONPATH
          value: "/app"
        - name: environment
          value: "production"
        command:
        - /bin/bash
        - /app/start_chronomaster.sh
        volumeMounts:
        - mountPath: /app
          name: python-app-volume
        envFrom:
        - secretRef:
            name: redis
